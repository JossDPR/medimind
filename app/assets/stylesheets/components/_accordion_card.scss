:root {
	--color-one: #1c230e;
	--color-two: #364b44;
	--text-color: $gray;
	--mem-width: min(38em, calc(100vw - 4em));
	// --mem-height: min(36em, calc(100vw - 6em));
	--slide-duration: 0.9s;
	--text-duration: 0.9s;
	--text-l-height: 1.5em;
}

* {
	box-sizing: border-box;
}

ul {
	padding: 0;
	list-style: none;
}

body,
h1,
h4,
p,
ul,
ol,
li {
	margin: 0;
}

* {
	margin: 0;
}



@keyframes start {
	0% {
		background-blend-mode: color-burn;
	}
	50% {
		background-blend-mode: darken;
	}
	100% {
		background-blend-mode: lighten;
	}
}
@keyframes start1 {
	0% {
		background-position: -100% 0, 0 0, center;
	}
	100% {
		background-position: 0 100%, 0 0, center;
	}
}

input,
button,
textarea,
select {
	font: inherit;
}

main {
	margin: 1em auto;
	width: var(--mem-width);
	max-width: 100%;
	font-size: 0.7rem;
}

.head {
	display: block;
	width: 100%;
	height: auto;
	background-repeat: no-repeat;
	background-position: center;
	background-size: contain;
	margin: 1em 0;
	text-transform: uppercase;
	text-align: center;
	text-transform: uppercase;
}

ul.item-list {
	max-width: var(--mem-width);
	margin: 0 auto;
}

img {
	max-width: 100%;
  max-height: 200px;
}

img[width][height] {
	height: auto;
}

/* Let SVG scale without boundaries */
img[src$=".svg"] {
	width: 100%;
	height: auto;
	max-width: none;
}
.vignette {
  // width: 100px;
  height: 50px;
}

input {
	display: none;
}

label {
	width: 100%;
	/*   display: flex;
  flex-direction: row;
  flex-wrap: wrap; */
	display: grid;
	grid-template-columns: 1fr auto;
	grid-template-rows: auto auto;
	grid-template-areas: "h4 control" "img img";
	margin-bottom: 1em;
	border-radius: 0.5em;
	background-color: white;
	// background-color: #45186b;
	transition: all 0.35s ease-in-out;
	padding: 0.5em;
}

label > h4 {
	// height: var(--text-l-height);
	overflow: hidden;
	/*   text-overflow: ellipsis;
  animation: text-hide var(--text-duration) ease-in-out; */
	transition: height var(--text-duration) ease-in-out;
	grid-area: h4;
}

label > .control {
	grid-area: control;
}

label > .slider {
	grid-area: img;
}

.acord-head {
  display: flex;
  width: 100%;
}

.acord-vign {
  width: 30%;
}

.acord-info {
  width: 70%;
  display: flex;
  flex-direction: column;
}

.acord-medic {
  height: 50%;
  text-transform: uppercase;
  font-size: large;
  font-weight: bolder;
}

.acord-qte {
  height: 50%;
  font-size: large;
  font-style: italic;
  color: $dark-gray;
}

.slider {
	margin-top: 1em;
	overflow: hidden;
	transition: all var(--slide-duration);
	height: 0;
  text-align: center;
}

.acord-det {
  width: 100%;
  padding: 10px;
}

.acord-det .grid-medic{
  text-transform: uppercase;
  font-size: x-large;
  font-weight: bolder;
  box-sizing: border-box;
}

.acord-det .grid-qte{
  font-size: large;
  font-style: italic;
  box-sizing: border-box;
}

.acord-det .grid-comment{
  font-size: large;
  font-style: italic;
  margin-top: 10px;
  margin-bottom: 10px;
  color: $dark-gray;
  box-sizing: border-box;
}

.acord-det .grid-val{
  box-sizing: border-box;
}


input:checked + label > .slider {
	/*  animation: details-show var(--slide-duration) ease-in-out; */
	transition: height var(--slide-duration) ease-in-out;
	height: var(--mem-height);
}

input:checked + label > h4 {
	height: calc(var(--text-l-height) * 3);
	/* animation: text-show var(--text-duration) ease-in-out; */
	transition: height var(--text-duration) ease-in-out;
}

input:not(:checked) + label > .slider {
	/* animation: details-hide var(--slide-duration) ease-in-out; */
	transition: height var(--slide-duration) ease-in-out;
	height: 0;
}

.control {
	display: block;
	width: var(--text-l-height);
	height: var(--text-l-height);

	background-repeat: no-repeat;
	background-position: center;
	background-size: contain;

	transition: all 0.3s ease;
	-webkit-transition: all 0.3s ease;
	-moz-transition: all 0.3s ease;
	-ms-transition: all 0.3s ease;
	-o-transition: all 0.3s ease;

	opacity: 0;
}

input:checked ~ label > .control {
	transform: rotate(-1.5turn);
	-webkit-transform: rotate(-1.5turn);
	-moz-transform: rotate(-1.5turn);
	-ms-transform: rotate(-1.5turn);
	-o-transform: rotate(-1.5turn);
}

@keyframes details-show {
	0% {
		height: 0;
	}

	100% {
		height: var(--mem-height);
	}
}

@keyframes details-hide {
	0% {
		height: var(--mem-height);
	}

	100% {
		height: 0;
	}
}

@keyframes text-show {
	0% {
		height: var(--text-l-height);
	}

	100% {
		height: calc(var(--text-l-height) * 3);
	}
}

@keyframes text-hide {
	0% {
		height: calc(var(--text-l-height) * 3);
	}

	100% {
		height: var(--text-l-height);
	}
}

@keyframes glow {
	0% {
		filter: drop-shadow(0 -0.2em 0.5em #5ed8d8);
	}

	100% {
		filter: drop-shadow(0 -0.2em 0.8em #5ed8d8);
	}
}

.label:active > .control,
.label:active {
	opacity: 1;
	animation: 0.9s glow ease-in-out infinite alternate;
}

@media (hover: hover) {
	li,
	label {
		cursor: pointer;
	}

	input:not(:checked) + label:hover > .slider {
		/* animation: details-show var(--slide-duration) ease-in-out; */
		transition: height var(--slide-duration) ease-in-out;
		height: var(--mem-height);
	}

	input:not(:checked) + label:not(:hover) > .slider {
		/* animation: details-hide var(--slide-duration) ease-in-out; */
		transition: height var(--slide-duration) ease-in-out;
		height: 0;
	}

	input:not(:checked) + label:hover > h4 {
		/* animation: text-show var(--text-duration) ease-in-out; */
		transition: height var(--text-duration) ease-in-out;
		height: calc(var(--text-l-height) * 3);
	}

	input:not(:checked) + label:not(:hover) > h4 {
		/* animation: text-hide var(--text-duration) ease-in-out; */
		transition: height var(--text-duration) ease-in-out;
		height: var(--text-l-height);
	}

	ul:hover .control {
		opacity: 1;
	}

	input:not(:checked) + label:hover > .control {
		transform: rotate(1.25turn);
		-webkit-transform: rotate(1.25turn);
		-moz-transform: rotate(1.25turn);
		-ms-transform: rotate(1.25turn);
		-o-transform: rotate(1.25turn);
		filter: drop-shadow(0 -0.2em 0.5em #5ed8d8);
	}
}

@media all and (min-width: 820px) and (max-width: 1022px) {
	/*tablet*/

	.label {
		padding: 1em;
	}

	main {
		font-size: 1rem;
	}
}

@media all and (min-width: 1023px) {
	/*descktop*/
	:root {
		--mem-width: 38rem;
		--mem-height: 36rem;
	}

	.head {
		margin: 1em 0;
		text-align: center;
		text-transform: uppercase;
	}

	.label {
		padding: 1rem;
	}


	main {
		font-size: 1.5rem;
	}
}

.taken {
  background-color: #F9DEDC;
}

.untaken {
  background-color: #DCFFD7;
}
